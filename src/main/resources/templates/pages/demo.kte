@import io.ktor.http.Parameters

<link rel="stylesheet" href="/static/styles/components/demo.css">

@template.page(pageName="demo", content = @`

	@template.components.page_title(title = "Demo", subtitle = "")

	@template.components.section_two_columns(
	id="demo",
	left = @`

	`,
	right = @`
		<form class="generator-form" hx-get="/generate" hx-target=".left" hx-swap="innerHTML"
		      hx-trigger="submit,params-loaded">
			<label>
				<span>Type:</span>
				<select name="type">
					<option value="simple_grid">Simple Grid</option>
					<option value="fireflies">Fireflies</option>
					<option value="waves">Waves</option>
					<option value="snake">Snake</option>
				</select>
			</label>

			<label>
				<span>Number:</span>
				<input type="number" name="n">
			</label>

			<label>
				<span>Seed:</span>
				<input type="number" name="seed">
			</label>

			<div class="actions">
				<input type="submit" value="Generate">
				<a class="download-button colored" href="/generate?blank" download="blank.svg">Download</a>
			</div>
		</form>
	`)
`)

@raw
<script>
	let form = document.querySelector(".generator-form");
	let downloadButton = document.querySelector(".download-button");

	document.addEventListener("DOMContentLoaded", _ => {
		let params = new URLSearchParams(window.location.search);

		for (let [key, value] of params) {
			let element = document.querySelector(`label > *[name="${key}"]`);

			if (element instanceof HTMLSelectElement) {
				let selected = element.querySelector(`option[value=${value}]`);
				selected.setAttribute("selected", "");
			} else {
				element.value = value;
			}
		}

		form.dispatchEvent(new Event("params-loaded"));
	});

	form.addEventListener("htmx:configRequest", e => {
		if (!e.detail.parameters["seed"]) {
			e.detail.parameters["seed"] = Math.floor(Math.random() * Math.pow(2, 23));
		}

		let query = Object.entries(e.detail.parameters).map(e => e.join("=")).join("&");

		downloadButton.setAttribute("href", `/generate?${query}`);
		downloadButton.setAttribute("download", `${query}.svg`);
		history.replaceState("lantrn_generator", "", `/demo?${query}`);
	});
</script>
@endraw